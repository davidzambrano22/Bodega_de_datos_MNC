base_socioemocionales %>%
dplyr::select(Habilidad, A) %>%
arrange(desc(A)) %>%
head(5) %>%
View()
names(base_socioemocionales)
base_socioemocionales %>%
dplyr::select("Habilidades Socioemocionales", "AGVE") %>%
arrange(desc(A)) %>%
head(5) %>%
View()
base_socioemocionales %>%
dplyr::select("Habilidades Socioemocionales", "AGVE") %>%
arrange(desc(A)) %>%
head(5) %>%
View()
base_socioemocionales %>%
dplyr::select("Habilidades Socioemocionales", "AGVE") %>%
arrange(desc("AGVE")) %>%
head(5) %>%
View()
base_socioemocionales %>%
dplyr::select("Habilidades Socioemocionales", "AGVE") %>%
# arrange(desc("AGVE")) %>%
# head(5) %>%
View()
base_socioemocionales %>%
dplyr::select("Habilidades Socioemocionales", "AGVE") %>%
arrange(desc("AGVE")) %>%
# head(5) %>%
View()
base_socioemocionales %>%
dplyr::select("Habilidades Socioemocionales", "AGVE") %>%
arrange(asc("AGVE")) %>%
# head(5) %>%
View()
base_socioemocionales %>%
dplyr::select("Habilidades Socioemocionales", "AGVE") %>%
arrange(desc("AGVE")) %>%
# head(5) %>%
View()
base_socioemocionales %>%
dplyr::select("Habilidades Socioemocionales", AGVE) %>%
arrange(desc("AGVE")) %>%
# head(5) %>%
View()
base_socioemocionales %>%
dplyr::select("Habilidades Socioemocionales", AGVE) %>%
arrange(desc(AGVE)) %>%
# head(5) %>%
View()
base_socioemocionales %>%
dplyr::select("Habilidades Socioemocionales", AGVE) %>%
arrange(desc(AGVE)) %>%
# head(5) %>%
View()
base_socioemocionales %>%
dplyr::select("Habilidades Socioemocionales", ETAL) %>%
arrange(desc(ETAL)) %>%
# head(5) %>%
View()
word_data <- data.frame(word = c("apple", "banana", "orange"),
freq = c(10, 20, 15))
wordcloud2a(word_data)
install.packages("plotly")
# For pie chart
library(plotly)
top_5_data <- base_socioemocionales %>%
dplyr::select(`Habilidades Socioemocionales`, `AFIR`) %>%
arrange(desc(`AFIR`)) %>%
head(5) %>% View()
base_socioemocionales = read_excel("data/input/bases/Base2Descriptivas.xls", sheet = "Socioemocionales")
top_5_data <- base_socioemocionales %>%
dplyr::select(`Habilidades Socioemocionales`, `AFIR`) %>%
arrange(desc(`AFIR`)) %>%
head(5) %>% View()
base_socioemocionales = read_excel("data/input/bases/Base2Descriptivas.xls", sheet = "Socioemocionales")
library(dplyr)
library(readxl)
library(ggplot2)
library(tm)
library(memoise)
library(tm)
source("wordcloud2a.R")
library(memoise)
library(wordcloud)
top_5_data <- base_socioemocionales %>%
dplyr::select(`Habilidades Socioemocionales`, `AFIR`) %>%
arrange(desc(`AFIR`)) %>%
head(5) %>% View()
base_socioemocionales = read_excel("data/input/bases/Base2Descriptivas.xls", sheet = "Socioemocionales")
top_5_data <- base_socioemocionales %>%
dplyr::select(`Habilidades Socioemocionales`, `AFIR`) %>%
arrange(desc(`AFIR`)) %>%
head(5) %>% View()
plot_ly(data = top_5_data ,labels = ~`Habilidades Socioemocionales`, values = `AFIR`, type = "pie")
top_5_data <- base_socioemocionales %>%
dplyr::select(`Habilidades Socioemocionales`, `AFIR`) %>%
arrange(desc(`AFIR`)) %>%
head(5) %>% View()
top_5_data <- base_socioemocionales %>%
dplyr::select(`Habilidades Socioemocionales`, `AFIR`) %>%
arrange(desc(`AFIR`)) %>%
head(5)
plot_ly(data = top_5_data,labels = ~`Habilidades Socioemocionales`, values = `AFIR`, type = "pie")
plot_ly(data = top_5_data,labels = ~`Habilidades Socioemocionales`, values = ~`AFIR`, type = "pie")
con <- dbConnect(RSQLite::SQLite(), "data/db/mnc-relational.db")
library(RSQLite)
con <- dbConnect(RSQLite::SQLite(), "data/db/mnc-relational.db")
main_bases <- dbReadTable(con, "fact_table")
names(main_bases)
source("~/Documents/Trabajos/Diana/bodega_datos/SistemaDatos/kobo.R", echo=TRUE)
datos <- BaseEncuestaDemanda <- read_dta("data/input/BaseEncuestaDemanda.dta")
print(names(datos))
install.packages(pdftools)
install.packages("pdftools")
datos <- BaseEncuestaDemanda <- read_dta("data/input/BaseEncuestaDemanda.dta")
print(names(datos))
datos <- BaseEncuestaDemanda <- read_dta("data/input/BaseEncuestaDemanda.dta")
print(names(datos))
print(names(datos))
datos <- BaseEncuestaDemanda <- read_dta("data/input/BaseEncuestaDemanda.dta")
View(datos)
source("~/Documents/Trabajos/Diana/bodega_datos/SistemaDatos/dashboard/ui/dashboard_tabs.R", echo=TRUE)
install.packages("pdftools")
library(shiny)
devtools::install_github('r-lib/later')
install.packages("devtools")
install.packages('devtools', dependecies=TRUE)
install.packages('devtools', dependecies=TRUE)
update.packages(..., checkBuilt=TRUE)
update.packages(checkBuilt = T, ask = F)
update.packages(checkBuilt = T, ask = F)
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
library(shiny)
install.packages("tidyverse")
install.packages("shinydashboard")
install.packages("shinyjs")
install.packages("stringi")
install.packages("reactable")
install.packages("jsonlite")
install.packages("readxl")
install.packages("readxl")
install.packages("tm")
install.packages("library(wordcloud2)")
install.packages("wordcloud2")
install.packages("memoise")
install.packages("ggthemes")
install.packages("wordcloud")
library(plotly)
base_descriptivas = read_excel("data/input/bases/Base1Descriptivas.xls")
base_descriptivas = read_excel("data/input/bases/Base1Descriptivas.xls")
library(dplyr)
library(readxl)
library(ggplot2)
library(tm)
library(memoise)
library(tm)
library(memoise)
library(wordcloud)
library(RSQLite)
library(haven)
library(plotly)
base_descriptivas = read_excel("data/input/bases/Base1Descriptivas.xls")
base_descriptivas = read_excel("data/input/bases/Base1Descriptivas.xls")
names(base_descriptivas)
base_descriptivas = read_excel("data/input/bases/Base1Descriptivas.xls")
base_socioemocionales = read_excel("data/input/bases/Base2Descriptivas.xls", sheet = "Socioemocionales")
names(base_socioemocionales)
base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(`¿Cuál es su área de desempeño?`) %>%
plot_ly(type="chart")
base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(`¿Cuál es su área de desempeño?`) %>%
plot_ly(type="pie")
base_des <- base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(`¿Cuál es su área de desempeño?`)
View(base_des)
plot_ly(base_des, type="pie")
plot_ly(base_des, values = ~n, type="pie")
names(base_des)
plot_ly(base_des, labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie")
plot_ly(base_des, labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', X1960, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
plot_ly(base_des, labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
plot_ly(base_des, labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
base_des <- base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(`¿Cuál es su área de desempeño?`) %>%
plot_ly(base_des, labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
base_des <- base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(`¿Cuál es su área de desempeño?`) %>%
plot_ly(base_des, labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
base_des <- base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(`¿Cuál es su área de desempeño?`) %>%
plot_ly(base_des, labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
base_des <- base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(`¿Cuál es su área de desempeño?`) %>%
plot_ly(base_des, labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(`¿Cuál es su área de desempeño?`) %>%
plot_ly(labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(`¿Cuál es su área de desempeño?`) %>%
plot_ly(labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(n=`¿Cuál es su área de desempeño?`) %>%
plot_ly(labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(nina=`¿Cuál es su área de desempeño?`) %>%
plot_ly(labels = ~`¿Cuál es su área de desempeño?`, values = ~nina, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(nina=`¿Cuál es su área de desempeño?`) %>%
plot_ly(labels = ~`¿Cuál es su área de desempeño?`, values = ~nina, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(`¿Cuál es su área de desempeño?`) %>%
plot_ly(labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE)
base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(`¿Cuál es su área de desempeño?`) %>%
plot_ly(labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE) %>%  layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')
base_descriptivas %>% dplyr::select(`Código_área`, `¿Cuál es su área de desempeño?`) %>%
dplyr::filter(`Código_área` %in%  c("AFIR")) %>%
group_by(`¿Cuál es su área de desempeño?`) %>% count(`¿Cuál es su área de desempeño?`) %>%
plot_ly(labels = ~`¿Cuál es su área de desempeño?`, values = ~n, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', n, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE) %>%  layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
base_medios = read_excel("data/input/bases/Base2Descriptivas.xls", sheet = "MediosBusqueda")
View(base_medios)
names(base_medios)
base_medios %>%
dplyr::select(`Medios de busqueda de personal`, "AFIR") %>%
arrange("AFIR") %>%
head(5) %>%
plot_ly(labels = ~`Medios de busqueda de personal`, values = ~!!sym(selected_column), type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = "AFIR",
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE) %>%  layout(title = 'Piechart por Cargos de Difícil Consecucion',
width = 500,
height = 500,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
base_medios %>%
dplyr::select(`Medios de busqueda de personal`, "AFIR") %>%
arrange("AFIR") %>%
head(5) %>%
plot_ly(labels = ~`Medios de busqueda de personal`, values = "AFIR", type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = "AFIR",
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE) %>%  layout(title = 'Piechart por Cargos de Difícil Consecucion',
width = 500,
height = 500,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
base_medios %>%
dplyr::select(`Medios de busqueda de personal`, "AFIR") %>%
arrange("AFIR") %>%
head(5) %>%
plot_ly(labels = ~`Medios de busqueda de personal`, values = ~AFIR, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = AFIR,
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE) %>%  layout(title = 'Piechart por Cargos de Difícil Consecucion',
width = 500,
height = 500,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
base_medios %>%
dplyr::select(`Medios de busqueda de personal`, "AFIR") %>%
arrange("AFIR") %>%
head(5) %>%
View()
base_medios %>%
dplyr::select(`Medios de busqueda de personal`, "AFIR") %>%
arrange("AFIR") %>%
head(5) %>%
plot_ly(labels = ~`Medios de busqueda de personal`, values = ~`AFIR`, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = AFIR,
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE) %>%  layout(title = 'Piechart por Cargos de Difícil Consecucion',
width = 500,
height = 500,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
base_medios %>%
dplyr::select(`Medios de busqueda de personal`, "AFIR") %>%
arrange("AFIR") %>%
head(5) %>%
plot_ly(labels = ~`Medios de busqueda de personal`, values = ~AFIR, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = `AFIR`,
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE) %>%  layout(title = 'Piechart por Cargos de Difícil Consecucion',
width = 500,
height = 500,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
base_medios %>%
dplyr::select(`Medios de busqueda de personal`, `AFIR`) %>%
arrange("AFIR") %>%
head(5) %>%
plot_ly(labels = ~`Medios de busqueda de personal`, values = ~AFIR, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = `AFIR`,
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE) %>%  layout(title = 'Piechart por Cargos de Difícil Consecucion',
width = 500,
height = 500,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
base_medios %>%
dplyr::select(`Medios de busqueda de personal`, `AFIR`) %>%
arrange("AFIR") %>%
head(5) %>%
plot_ly(labels = ~`Medios de busqueda de personal`, values = ~AFIR, type="pie",
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~AFIR,
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
#The 'pull' attribute can also be used to create space between the sectors
showlegend = FALSE) %>%  layout(title = 'Piechart por Cargos de Difícil Consecucion',
width = 500,
height = 500,
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
